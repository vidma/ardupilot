name: Macos Build

on: [push, pull_request, workflow_dispatch]
concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: 'macos-latest'
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        config: [
            #sitl,
            #CubeOrange,
            MambaF405v2
        ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Install Prerequisites
        shell: bash
        run: |
          if [[ ${{ matrix.config }} == "sitl" ]]; then
            export DO_AP_STM_ENV=0
          fi
          Tools/environment_install/install-prereqs-mac.sh -y
          source ~/.bash_profile
      # Put ccache into github cache for faster build
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        run: |
          NOW=$(date -u +"%F-%T")
          echo "::set-output name=timestamp::${NOW}"
      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{github.workflow}}-ccache-${{matrix.config}}-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{github.workflow}}-ccache-${{matrix.config}} # restore ccache from either previous build on this branch or on master
      - name: setup ccache
        run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 6" >> ~/.ccache/ccache.conf
          echo "max_size = 400M" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z
      - name: test build ${{matrix.config}}
        env:
          CI_BUILD_TARGET: ${{matrix.config}}
          BUILDLOGS: /tmp/buildlogs
          BUILD_BINARIES_PATH: /tmp/ardu-build-dir
        shell: bash
        run: |
          source ~/.bash_profile
          PATH="/github/home/.local/bin:$PATH"
          mkdir -p $BUILDLOGS/binaries
          mkdir -p $BUILD_BINARIES_PATH
          echo $PATH
          #./waf configure --board ${{matrix.config}}
          #./waf plane
          # latest tag would use newer compiled, but it's not installed (linked)...
          ./Tools/scripts/build_binaries.py --tags beta
          tar -cvf /tmp/buildlogs/built_binaries.tar /tmp/buildlogs/binaries/Plane/
          ccache -s
          ccache -z
      - name: 'Upload'
        uses: actions/upload-artifact@v2
        with:
          name: arduplane build files tar
          path: /tmp/buildlogs/built_binaries.tar
      - name: 'Upload individual files'
        uses: actions/upload-artifact@v2
        with:
          name: arduplane build files
          path: /tmp/buildlogs/binaries/Plane/
